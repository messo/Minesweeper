/**
 * Copyright (c) 2010 Bálint Kriván <balint@krivan.hu>. All rights reserved.
 * Use of this source code is governed by license that can be
 * found in the LICENSE file.
 */
package hu.krivan.minesweeper.client;

import hu.krivan.minesweeper.common.Field;
import hu.krivan.minesweeper.common.Table;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JToggleButton;
import javax.swing.SwingConstants;

/**
 *
 * @author  balint
 */
public abstract class Board extends JPanel implements ActionListener, MouseListener {

    public static final URL imageURL = Board.class.getResource("/mine.png");

    private class FieldWidget extends JPanel {

        private JToggleButton button;

        public FieldWidget(JToggleButton btn) {
            setLayout(new GridLayout(1, 1));
            button = btn;
            add(btn);
        }

        public JToggleButton getButton() {
            return button;
        }

        public void convertToLabel(int count) {
            remove(button);
            button = null;
            if (count == -1) { // mine
                add(new JLabel(new ImageIcon(imageURL)));
            } else {
                add(new JLabel((count == 0) ? " " : String.valueOf(count), SwingConstants.CENTER));
            }
        }
    }
    public Table table;
    MainFrame frame;
    private FieldWidget[][] board;

    /** Creates new form Board */
    public Board() {
        initComponents();
        initMyComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.GridLayout(21, 21));
    }// </editor-fold>//GEN-END:initComponents

    void onUpdatedTable(Table table) {
        this.table = table;
        Field[][] fields = table.getFields();
        for (int j = 0; j < 21; j++) {
            for (int i = 0; i < 21; i++) {
                JToggleButton btn = board[i][j].getButton();
                if (btn != null) {
                    if (fields[i][j].isRevealed()) {
                        board[i][j].convertToLabel(fields[i][j].getValue());
                    } else {
                        if (!btn.getText().equals("X")) {
                            btn.setText("");
                            btn.setSelected(false);
                        }
                    }
                }
            }
        }
        validate();
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        JToggleButton btn = (JToggleButton) e.getSource();
        for (int j = 0; j < 21; j++) {
            for (int i = 0; i < 21; i++) {
                if (btn.equals(board[i][j].getButton())) {
                    if (table == null || !table.getFields()[i][j].isRevealed()) {
                        onFieldClicked(i, j);
                    } else {
                        btn.setSelected(!btn.isSelected());
                    }
                }
            }
        }
    }

    @Override
    public void mouseClicked(MouseEvent e) {
    }

    @Override
    public void mousePressed(MouseEvent e) {
        if (e.getButton() == MouseEvent.BUTTON3) {
            JToggleButton btn = (JToggleButton) e.getSource();
            if (btn.getText().equals("")) {
                btn.setText("X");
            } else if (btn.getText().equals("X")) {
                btn.setText("");
            }
        }
    }

    @Override
    public void mouseReleased(MouseEvent e) {
    }

    @Override
    public void mouseEntered(MouseEvent e) {
    }

    @Override
    public void mouseExited(MouseEvent e) {
    }

    private void initMyComponents() {
        board = new FieldWidget[21][21];
        JToggleButton btn;
        for (int j = 0; j < 21; j++) {
            for (int i = 0; i < 21; i++) {
                btn = new JToggleButton();
                btn.setPreferredSize(new Dimension(20, 20));
                btn.setMargin(new Insets(0, 0, 0, 0));
                btn.addActionListener(this);
                btn.addMouseListener(this);
                board[i][j] = new FieldWidget(btn);
                add(board[i][j]);
            }
        }
    }

    protected abstract void onFieldClicked(int x, int y);
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
